{"version":3,"sources":["components/test/TodoList.js","components/test/TodoEditor.js","components/test/Filter.js","App.js","index.js","components/test/Todo.module.css"],"names":["TodoList","todos","onDeleteTodo","onToggleCompleted","className","s","todo_list","map","id","text","completed","item","type","checked","onChange","onClick","TodoEditor","state","message","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","onSubmit","this","Component","Filter","App","initialTodos","filter","deleteTodo","todoId","prevState","todo","handleFormSummit","data","console","log","toggleCompleted","addTodo","shortId","generate","changeFilter","completedTodo","reduce","total","visibleTodos","toLocaleLowerCase","includes","totalTodos","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"uoBAGe,SAASA,EAAT,GAA+D,IAA3CC,EAA0C,EAA1CA,MAAOC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,kBACtD,OACE,oBAAIC,UAAWC,IAAEC,UAAjB,SACGL,EAAMM,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAb,OACT,qBAAaN,UAAWC,IAAEM,KAA1B,UACE,uBACEC,KAAK,WACLC,QAASH,EACTI,SAAU,kBAAMX,EAAkBK,MAEpC,4BAAIC,IACJ,wBAAQM,QAAS,kBAAMb,EAAaM,IAApC,0DAPOA,Q,YCLIQ,E,4MACnBC,MAAQ,CACNC,QAAS,I,EAGXC,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAEH,QAASE,EAAEE,cAAcC,S,EAG3CC,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,U,uDAI/B,OACE,uBAAMS,SAAUC,KAAKJ,aAArB,UACE,0BACED,MAAOK,KAAKX,MAAMC,QAClBJ,SAAUc,KAAKT,eAEjB,wBAAQP,KAAK,SAAb,2E,GArBgCiB,a,iBCOzBC,EAPA,SAAC,GAAD,IAAGP,EAAH,EAAGA,MAAOT,EAAV,EAAUA,SAAV,OACb,6IAEE,uBAAOF,KAAK,OAAOW,MAAOA,EAAOT,SAAUA,QC6FhCiB,E,4MA9Ebd,MAAQ,CACNhB,MAAO+B,EACPC,OAAQ,I,EAGVC,WAAa,SAAAC,GACX,EAAKd,UAAS,SAAAe,GAAS,MAAK,CAC1BnC,MAAOmC,EAAUnC,MAAMgC,QAAO,SAAAI,GAAI,OAAIA,EAAK7B,KAAO2B,U,EAItDG,iBAAmB,SAAAC,GACjBC,QAAQC,IAAIF,I,EAGdG,gBAAkB,SAAAP,GAahB,EAAKd,UAAS,kBAAgB,CAC5BpB,MADY,EAAGA,MACFM,KAAI,SAAA8B,GAAI,OACnBF,IAAWE,EAAK7B,GAAhB,2BAA0B6B,GAA1B,IAAgC3B,WAAY2B,EAAK3B,YAAc2B,U,EAKrEM,QAAU,SAAAlC,GACR+B,QAAQC,IAAIhC,GACZ,IAAM4B,EAAO,CACX7B,GAAIoC,IAAQC,WACZpC,OACAC,WAAW,GAEb,EAAKW,UAAS,gBAAGpB,EAAH,EAAGA,MAAH,MAAgB,CAC5BA,MAAM,CAAEoC,GAAH,mBAAYpC,S,EAGrB6C,aAAe,SAAA1B,GACb,EAAKC,SAAS,CAAEY,OAAQb,EAAEE,cAAcC,S,uDAGhC,IAAD,EACmBK,KAAKX,MAAvBhB,EADD,EACCA,MAAOgC,EADR,EACQA,OAETc,EAAgB9C,EAAM+C,QAC1B,SAACC,EAAOZ,GAAR,OAAkBA,EAAK3B,UAAYuC,EAAQ,EAAIA,IAC/C,GAEIC,EAAejD,EAAMgC,QAAO,SAAAI,GAAI,OACpCA,EAAK5B,KAAK0C,oBAAoBC,SAASnB,EAAOkB,wBAE1CE,EAAaH,EAAaI,OAEhC,OACE,gCACE,iGAAkBD,KAClB,+HAAuBN,EAAvB,OACA,cAAC,EAAD,CAAYpB,SAAUC,KAAKe,UAC3B,cAAC,EAAD,CAAQpB,MAAOU,EAAQnB,SAAUc,KAAKkB,eACtC,cAAC9C,EAAD,CACEC,MAAOiD,EACPhD,aAAc0B,KAAKM,WACnB/B,kBAAmByB,KAAKc,yB,GAxEhBb,aCVlB0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCZ1BC,EAAOC,QAAU,CAAC,UAAY,wBAAwB,KAAO,sB","file":"static/js/main.a68c1ae7.chunk.js","sourcesContent":["import React from 'react';\r\nimport s from './Todo.module.css';\r\n\r\nexport default function TodoList({ todos, onDeleteTodo, onToggleCompleted }) {\r\n  return (\r\n    <ul className={s.todo_list}>\r\n      {todos.map(({ id, text, completed }) => (\r\n        <li key={id} className={s.item}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={completed}\r\n            onChange={() => onToggleCompleted(id)}\r\n          />\r\n          <p>{text}</p>\r\n          <button onClick={() => onDeleteTodo(id)}>Удалить</button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import { Component } from 'react';\r\n\r\nexport default class TodoEditor extends Component {\r\n  state = {\r\n    message: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ message: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state.message);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          value={this.state.message}\r\n          onChange={this.handleChange}\r\n        ></textarea>\r\n        <button type=\"submit\">Отправить</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    Фильтрация по имени\r\n    <input type=\"text\" value={value} onChange={onChange} />\r\n  </label>\r\n);\r\n\r\nexport default Filter;\r\n","// import user from './components/Profile/user.json';\n// import Profile from './components/Profile/Profile';\n// import statisticalData from './components/Statistics/statistical-data.json';\n// import Statistics from './components/Statistics/Statistics';\n// import friends from './components/FriendList/friends.json';\n// import FriendList from './components/FriendList/FriendList';\n// import transactions from './components/TransactionHistory/transactions.json';\n// import TransactionHistory from './components/TransactionHistory/TransactionHistory';\n// import Counter from './components/test/test';\n// import Dropdown from './components/test/Dropdown/Dropdown';\n// import ColorPicker from './components/test/ColorPicker';\nimport React, { Component } from 'react';\nimport TodoList from './components/test/TodoList';\nimport initialTodos from './components/test/todos.json';\nimport TodoEditor from './components/test/TodoEditor';\nimport shortId from 'shortid';\nimport Filter from './components/test/Filter';\n// import Form from './components/test/Form';\n\nclass App extends Component {\n  state = {\n    todos: initialTodos,\n    filter: '',\n  };\n\n  deleteTodo = todoId => {\n    this.setState(prevState => ({\n      todos: prevState.todos.filter(todo => todo.id !== todoId),\n    }));\n  };\n\n  handleFormSummit = data => {\n    console.log(data);\n  };\n\n  toggleCompleted = todoId => {\n    // this.setState(prevState => ({\n    //   todos: prevState.todos.map(todo => {\n    //     if (todoId === todo.id) {\n    //       return {\n    //         ...todo,\n    //         completed: !todo.completed,\n    //       };\n    //     }\n    //     return todo;\n    //   }),\n    // }));\n\n    this.setState(({ todos }) => ({\n      todos: todos.map(todo =>\n        todoId === todo.id ? { ...todo, completed: !todo.completed } : todo,\n      ),\n    }));\n  };\n\n  addTodo = text => {\n    console.log(text);\n    const todo = {\n      id: shortId.generate(),\n      text,\n      completed: false,\n    };\n    this.setState(({ todos }) => ({\n      todos: [todo, ...todos],\n    }));\n  };\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const { todos, filter } = this.state;\n\n    const completedTodo = todos.reduce(\n      (total, todo) => (todo.completed ? total + 1 : total),\n      0,\n    );\n    const visibleTodos = todos.filter(todo =>\n      todo.text.toLocaleLowerCase().includes(filter.toLocaleLowerCase()),\n    );\n    const totalTodos = visibleTodos.length;\n\n    return (\n      <div>\n        <p>Общее кол-во: {totalTodos}</p>\n        <p>Кол-во выполненых: {completedTodo} </p>\n        <TodoEditor onSubmit={this.addTodo} />\n        <Filter value={filter} onChange={this.changeFilter} />\n        <TodoList\n          todos={visibleTodos}\n          onDeleteTodo={this.deleteTodo}\n          onToggleCompleted={this.toggleCompleted}\n        />\n        {/* <Form onSubmit={this.handleFormSummit} /> */}\n      </div>\n    );\n  }\n}\nexport default App;\n// export default function App() {\n//   return (\n//     <div>\n//       <ColorPicker options={colorPickerOptions} />\n//     </div>\n//   );\n// }\n\n// const colorPickerOptions = [\n//   { label: 'red', color: '#F44336' },\n//   { label: 'green', color: '#4CAF50' },\n//   { label: 'blue', color: '#2196F3' },\n//   { label: 'grey', color: '#607D8B' },\n//   { label: 'pink', color: '#E91E63' },\n//   { label: 'indigo', color: '#3F51B5' },\n// ];\n\n// export default function App() {\n//   return (\n//     <div>\n//       <Dropdown />\n//     </div>\n//   );\n// }\n\n// export default function App() {\n//   return (\n//     <div>\n//       <Counter initValue={999} />\n//     </div>\n//   );\n// }\n\n// export default function App() {\n//   return (\n//     <div>\n//       <Profile\n//         name={user.name}\n//         tag={user.tag}\n//         location={user.location}\n//         avatar={user.avatar}\n//         stats={user.stats}\n//       />\n//       <Statistics title=\"Upload stats\" stats={statisticalData} />\n//       <Statistics stats={statisticalData} />\n//       <FriendList friends={friends} />\n//       <TransactionHistory items={transactions} />\n//     </div>\n//   );\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import User from './Profile/user.json'\n// import Profile from './Profile/Profile'\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n// ReactDOM.render(<Profile avatar={User.avatar} name={User.name}/>, document.querySelector('#root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo_list\":\"Todo_todo_list__28np4\",\"item\":\"Todo_item__m3ijG\"};"],"sourceRoot":""}